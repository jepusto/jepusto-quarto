{
  "hash": "0b672d369a218bf48506afde6ba5693f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Code folding with blogdown + Academic theme\ndate: '2019-04-14'\ncategories:\n- programming\n- Rstats\nnumber-sections: true\ncode-tools: false\ndate-modified: '2024-06-08'\n---\n\n\n::: callout-important\n**2024-06-08** I have ported my website to Quarto, which has native support for code folding. I'm leaving this post up despite the fact that the functionality is no longer relevant for this website.\n\n**2020-05-03** This post describes an implementation of code folding for an older version of the Academic Theme. It does not work with Academic 4.+. See [my updated instructions](/posts/code-folding-update/) to get it working with newer versions of Academic.\n:::\n\nRmarkdown documents now have a very nifty [code folding option](https://bookdown.org/yihui/rmarkdown/html-document.html#code-folding), which allows the reader of a compiled html document to toggle whether to view or hide code chunks. However, the feature is [not supported in blogdown](https://github.com/rstudio/blogdown/issues/214), the popular Rmarkdown-based website/blog creation package. I recently ran across an implementation of codefolding for blogdown, developed by [Sébastien Rochette](https://statnmap.com/2017-11-13-enable-code-folding-in-bookdown-and-blogdown/). I have been putzing around, trying to get it to work with my blog, which uses the Hugo [Academic theme](https://sourcethemes.com/academic/)---alas, to no avail. To my amazement and good fortune, Sébastien swooped in with [a pull request](https://github.com/jepusto/jepusto.com/pull/9) that cleaned up my blundering attempts at implementation. Now all of [my posts](/posts/package-downloads) have [working](/posts/handmade-clubSandwich) [code folding](/posts/effective-sample-size-aggregation)!\n\n![](https://media.giphy.com/media/mIZ9rPeMKefm0/giphy.gif)\n\nIn this post, I'll lay out how to make Sébastien's code folding feature work with the Academic theme. To be totally clear, all of the hard bits of this were [solved by Sébastien](https://statnmap.com/2017-11-13-enable-code-folding-in-bookdown-and-blogdown/). I don't know javascript to save my life, and my only contribution is to write down the instructions in what I hope is a coherent fashion, so that you too can soon be doing the happy code folding dance if you so desire.\n\n## Code folding with the Academic theme\n\n1.  You'll first need to pull in some javascript assets. Create a folder called `js` under the `\\static` directory of your site. Add the files `transition.js`, `collapse.js`, and `dropdown.js` from [bootstrap](https://github.com/twbs/bootstrap/tree/v3.3.7/js).\n\n2.  Also add Sébastien's codefolding javascript, [`codefolding.js`](/files/_codefolding/codefolding.js).\n\n3.  Create a folder called `css` under the `\\static` directory of your site. Add the file [`codefolding.css`](/files/_codefolding/codefolding.css). This is the css for the buttons that will appear on your posts.\n\n4.  Add the file [`article_footer_js.html`](/files/_codefolding/article_footer_js.html) to the `\\layouts\\partials` directory of your site.\n\n5.  Add the file [`header_maincodefolding.html`](/files/_codefolding/header_maincodefolding.html) to the `\\layouts\\partials` directory of your site.\n\n6.  If you do not already have a file `head_custom.html` in the `\\layouts\\partials` directory, create it. Add the following lines of code to the file:\n\n\n    ::: {.cell}\n    \n    ```{.js .cell-code}\n    {{ if not .Site.Params.disable_codefolding }}\n      <script src=\"{{ \"js/collapse.js\" | relURL }}\"></script>\n      <script src=\"{{ \"js/dropdown.js\" | relURL }}\"></script>\n      <script src=\"{{ \"js/transition.js\" | relURL }}\"></script>\n    {{ end }}\n    ```\n    :::\n\n\n7.  If you do not already have a file `footer.html` in the `\\layouts\\partials` directory, copy it over from `\\themes\\hugo-academic\\layouts\\partials`. Add the following lines of code to it, somewhere towards the bottom:\n\n\n    ::: {.cell}\n    \n    ```{.js .cell-code}\n    <!-- Init code folding -->\n    {{ partial \"article_footer_js.html\" . }}\n    ```\n    :::\n\n\n8.  If you do not already have the file `single.html` in the directory `\\layouts\\_default`, copy it over from `\\themes\\hugo-academic\\layouts\\_default`. Add the following line of code at an appropriate point so that your posts will include the \"Show/hide code\" button (I put it after the title, before the meta-data):\n\n\n    ::: {.cell}\n    \n    ```{.js .cell-code}\n     {{ partial \"header_maincodefolding\" . }}\n    ```\n    :::\n\n\n9.  Modify your `config.toml` file (in the base directory of your site) to include the following lines:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Set to true to disable code folding\n    disable_codefolding = false\n    # Set to \"hide\" or \"show\" all codes by default\n    codefolding_show = \"show\"\n    # Set to true to exclude the \"Show/hide all\" button\n    codefolding_nobutton = false\n    ```\n    :::\n\n\n    Also edit the `custom_css` parameter so that the `codefolding.css` file will get loaded:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    custom_css = [\"codefolding.css\"]\n    ```\n    :::\n\n\n## Using the codefolding parameters\n\nThe `config.toml` file now has three parameters that control code folding:\n\n-   `disable_codefolding` controls whether to load the code folding scripts on your site. Set it to `true` to disable code folding globally.\n-   `codefolding_show` controls whether code blocks will be shown or hidden by default. If your previous posts have lots of code in them, set the default to `show` to minimize changes in the appearance of your site.\n-   `codefolding_nobutton` controls whether the \"Show/hide code\" button will appear at the top of posts that include code blocks. Set it to `true` to disable the button but keep the other code folding functionality.\n\nThe above parameters are defaults for your entire site. To over-ride the defaults, you can also set the parameters in the YAML header of any post:\n\n-   Set `disable_codefolding: true` to turn off code folding for the post.\n-   Set `codefolding_show: hide` to hide the code blocks in the post (as in [this post](/posts/package-downloads/)).\n-   Set `codefolding_nobutton: true` to turn off the \"Show/hide code\" button at the top of the post (as in the present post).\n\nI hope these instructions work for you. If not, questions, corrections, and clarifications are welcome. Thanks again to [Sébastien Rochette](https://statnmap.com/) for working out this solution and for graciously troubleshooting my attempt at implementation. Happy blogging, y'all!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}