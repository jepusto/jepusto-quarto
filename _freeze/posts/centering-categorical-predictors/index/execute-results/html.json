{
  "hash": "ed06d9b2e1ad2a9841aad6380da4bf97",
  "result": {
    "markdown": "---\ntitle: Centering categorical predictors in meta-regression\nauthors: admin\ndate: '2020-11-19'\ncategories:\n- meta-analysis\n- hierarchical models\ndraft: true\ncode-tools: true\n\n---\n\n\nMeta-analyses of dependent effect size estimates involve a hierarchical data structure, where you've got multiple independent samples (or experiments or studies, you might call them) and one or more effect size estimates are drawn from each sample. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(fastDummies)\nlibrary(clubSandwich)\nlibrary(metafor)\n\ntmp <- tempfile(fileext = \".rds\")\ndownload.file(\"https://jepusto.com/data/Tanner-Smith-Lipsey-2015-subset.rds\", tmp)\n\nTSL15 <- \n  readRDS(file = tmp) %>%\n  # exclude observations missing control variables\n  filter(!is.na(percoll), !is.na(attrition_all), !is.na(permale))\n\n# Shorten dv category labels\nlevels(TSL15$dv_cat) <- c(\"freq\",\"heavy\",\"quantity\",\"peak\",\"BAC\",\"combined\")\n\n# Center control variables\n\nTSL15_cent <- \n  TSL15 %>%\n  mutate(\n    postwks_c = pmin(postwks, 26) - 12,\n    postwks_long = as.numeric(postwks > 26),\n    percoll_c = percoll - 1,\n    permale_c = permale - 0.5,\n    attrition_c = attrition_all - median(attrition_all),\n    study_dv = paste(studyid, dv_cat, sep = \"-\"),\n    study_ctype = paste(studyid, Ctype, sep = \"-\")\n  ) %>%\n  # make dummies\n  dummy_cols(\"dv_cat\") %>%\n  group_by(studyid) %>%\n  # group center, group means\n  mutate(across(starts_with(\"dv_cat_\"), list(gc = ~ .x - mean(.x), gm = ~ mean(.x)))) %>%\n  ungroup() %>%\n  mutate(\n    # center group means\n    across(matches(\"dv_cat_.+_gm\"), ~ .x - mean(.x)),\n    # add grand means to group-centered\n    across(matches(\"dv_cat_.+_gc\"), ~ .x + mean(.x), .names = \"{.col}g\")\n  )\n\n# constant sampling correlation assumption\nrho <- 0.6\n\n# constant sampling correlation working model\nV_mat <- impute_covariance_matrix(TSL15_cent$V, \n                                  cluster = TSL15_cent$studyid, \n                                  r = rho, \n                                  smooth_vi = TRUE)\n\n# fit random effects working model in metafor\ndv_multilevel <- rma.mv(yi = es,\n                        mods = ~ 0 + dv_cat,\n                        V = V_mat, \n                        random = ~ 1 | studyid / esid,\n                        data = TSL15_cent, sparse = TRUE)\ndv_multilevel\n\ndv_A <- update(dv_multilevel, \n               mods = ~ dv_cat_freq_gc + dv_cat_heavy_gc + dv_cat_quantity_gc + dv_cat_peak_gc + dv_cat_BAC_gc + \n                 dv_cat_freq_gm + dv_cat_heavy_gm + dv_cat_quantity_gm + dv_cat_peak_gm + dv_cat_BAC_gm)\ndv_A\nWald_test(dv_A, vcov = \"CR2\", constraints = constrain_zero(\"dv_cat_.+_gc\", reg_ex = TRUE))\nWald_test(dv_A, vcov = \"CR2\", constraints = constrain_pairwise(\"dv_cat_.+_gc\", reg_ex = TRUE, with_zero = TRUE), tidy = TRUE)\n\ndv_B <- update(dv_multilevel, \n               mods = ~ dv_cat_freq_gc + dv_cat_heavy_gc + dv_cat_quantity_gc + dv_cat_peak_gc + dv_cat_BAC_gc)\ndv_B\nWald_test(dv_B, vcov = \"CR2\", constraints = constrain_zero(\"dv_cat_.+_gc\", reg_ex = TRUE))\nWald_test(dv_B, vcov = \"CR2\", constraints = constrain_pairwise(\"dv_cat_.+_gc\", reg_ex = TRUE, with_zero = TRUE), tidy = TRUE)\n\n\ndv_C <- update(dv_multilevel, \n               mods = ~ 0 + dv_cat + \n                 dv_cat_freq_gm + dv_cat_heavy_gm + dv_cat_quantity_gm + dv_cat_peak_gm + dv_cat_BAC_gm)\n\ndv_C\nWald_test(dv_C, vcov = \"CR2\", constraints = constrain_equal(1:6))\nWald_test(dv_C, vcov = \"CR2\", constraints = constrain_pairwise(1:6), tidy = TRUE)\n\ndv_D <- rma.mv(yi = es,\n               mods = ~ 0 + factor(studyid) + dv_cat,\n               V = V_mat, \n               random = ~ 1 | esid,\n               data = TSL15_cent, sparse = TRUE)\nWald_test(dv_D, vcov = \"CR2\", constraints = constrain_zero(\"dv_cat\", reg_ex = TRUE))\nWald_test(dv_D, vcov = \"CR2\", constraints = constrain_pairwise(\"dv_cat\", reg_ex = TRUE, with_zero = TRUE), tidy = TRUE)\n\ncoef(dv_A)[2:6]\ncoef(dv_B)[2:6]\ncoef(dv_C)[1:5] - coef(dv_C)[6]\ncoef(dv_D)[118:122]\ncoef(dv_C)[2:6] - coef(dv_C)[1]\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}