{
  "hash": "e560cf0257134b39baf2d2de6e9433df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: SCD-effect-sizes\nsubtitle: Single-case design effect size calculator\ndate: '2025-01-06'\ncategories:\n- effect size\ndraft: true\nexecute:\n  echo: false\ncode-tools: true\nformat: live-html\nengine: knitr\n---\n::: {.cell}\n\n:::\n\n\n\n\n# Data input\n\nEnter data values, separated by commas, spaces, or tabs.\n\n::::: {.grid}\n\n:::: {.g-col-4}\n\n### Phase A\n\n\n```{ojs}\nviewof A_data = Inputs.text({placeholder: \"Phase A\"})\n```\n\n\n::::\n\n:::: {.g-col-4}\n\n### Phase B\n\n\n```{ojs}\nviewof B_data = Inputs.text({placeholder: \"Phase B\"})\n```\n\n\n::::\n\n:::::\n\n# Effect size specification \n\n::: {.panel-tabset}\n\n## Non-overlap\n\n\n```{ojs}\nNOM_vals = [\"IRD\",\"NAP\",\"PAND\",\"PEM\",\"PND\",\"Tau\",\"Tau-BC\",\"Tau-U\"]\ntau_calc_vals = [\"Tau (non-overlap)\", \"Kendall rank correlation\"]\nbaseline_check_vals = [\"Always adjust for baseline trend\",\"Pretest for baseline trend, adjust if significant\"]\n```\n\n```{ojs}\n//| panel: input\n\nviewof NOM = Inputs.select(\n  NOM_vals, \n  {\n    value: \"NAP\", \n    label: \"Effect size index\"\n  }\n)\n\nviewof tau_calculation = (NOM == \"Tau-BC\")\n  ? Inputs.radio(\n      tau_calc_vals, \n      {\n        value: tau_calc_vals[0], \n        label: \"Choose a method for calculating Tau index\"\n      }\n    )\n  : Object.assign(html``, { value: null })\n\nviewof baseline_check = (NOM == \"Tau-BC\")\n  ? Inputs.radio(\n      baseline_check_vals, \n      {\n        value: baseline_check_vals[0], \n        label: \"Test for baseline trend?\"\n      }\n    )\n  : Object.assign(html``, { value: null })\n\nviewof significance_level = (NOM == \"Tau-BC\" && baseline_check == baseline_check_vals[1])\n  ? Inputs.range(\n      [0.005,0.995], \n      {\n        step: 0.005, \n        value: 0.05, \n        label: \"Significance level for the initial baseline trend test\"\n      }\n    )\n  : Object.assign(html``, { value: null })\n\nviewof NOM_confidence = Inputs.range(\n  [1,100], \n  {\n    step: 1, \n    value: 95, \n    label: \"Confidence level\",\n    disabled: NOM !== \"NAP\" && NOM !== \"Tau\" && NOM !== \"Nau-BC\" \n  }\n)\n\nviewof NOM_digits = Inputs.range(\n  [1,16], \n  {\n    step: 1, \n    value: 2, \n    label: \"Digits\"\n  }\n) \n```\n\n\n## Parametric\n\n\n```{ojs}\nES_parametric_vals = [\"LOR\", \"LRRd\", \"LRRi\", \"LRM\", \"PoGO\", \"SMD\"]\nSMD_denom_vals = [\"baseline SD\",\"pooled SD\"]\nout_scale_vals = [\"percentage\",\"proportion\",\"count\",\"rate\",\"other\"]\n```\n\n```{ojs}\n//| panel: input\n\nviewof ES_parametric = Inputs.select(\n  ES_parametric_vals, \n  {\n    value: \"LRRd\", \n    label: \"Effect size index\"\n  }\n)\n\nviewof SMD_denom = ES_parametric == \"SMD\"\n  ? Inputs.radio(\n    SMD_denom_vals, \n    {\n      value: SMD_denom_vals[0], \n      label: \"Standardized by\"\n    }\n  )\n  : Object.assign(html``, { value: null })\n\nviewof out_scale = ES_parametric == \"LOR\" || ES_parametric == \"LRRd\" || ES_parametric == \"LRRi\" \n  ? Inputs.select(\n    out_scale_vals,\n    {\n      value: out_scale_vals[0],\n      label: \"Outcome Scale\"\n    }\n  )\n  : Object.assign(html``, { value: null })\n\nviewof intervals = ES_parametric == \"LOR\" || ES_parametric == \"LRRd\" || ES_parametric == \"LRRi\" \n  ? Inputs.number(\n    [1,Infinity],\n    {\n      step: 1,\n      label: \"If observed via interval recording, total intervals per session\",\n      placeholder: \"\"\n    }\n  )\n  : Object.assign(html``, { value: null })\n\nviewof obslength = ES_parametric == \"LOR\" || ES_parametric == \"LRRd\" || ES_parametric == \"LRRi\" \n  ? Inputs.number(\n    [0,Infinity],\n    {\n      step: 0.1,\n      label: \"Session length (in minutes)\",\n      placeholder: \"\"\n    }\n  )\n  : Object.assign(html``, { value: null })\n\nviewof lrrfloor = ES_parametric == \"LOR\" || ES_parametric == \"LRRd\" || ES_parametric == \"LRRi\" \n  ? Inputs.number(\n    [0,Infinity],\n    {\n      step: 0.01,\n      label: \"User-specified floor constant\",\n      placeholder: \"\"\n    }\n  )\n  : Object.assign(html``, { value: null })\n\nviewof parametric_confidence = Inputs.range(\n  [1,100], \n  {\n    step: 1, \n    value: 95, \n    label: \"Confidence level\"\n  }\n)\n\nviewof parametric_digits = Inputs.range(\n  [1,16], \n  {\n    step: 1, \n    value: 2, \n    label: \"Digits\"\n  }\n) \n\n```\n\n\n:::\n\n\n\n::: {.cell}\n```{webr}\nfor (x in 1:5) {\n  print(x ** 2)\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}