---
title: SCD-effect-sizes
subtitle: Single-case design effect size calculator
date: '2025-01-06'
categories:
- effect size
draft: true
execute:
  echo: false
code-tools: true
format: live-html
engine: knitr
---

{{< include /_extensions/r-wasm/live/_knitr.qmd >}}


# Data input

Enter data values, separated by commas, spaces, or tabs.

::::: {.grid}

:::: {.g-col-4}

### Phase A

```{ojs}
viewof A_data = Inputs.text({placeholder: "Phase A"})
```

::::

:::: {.g-col-4}

### Phase B

```{ojs}
viewof B_data = Inputs.text({placeholder: "Phase B"})
```

::::

:::::

# Effect size specification 

::: {.panel-tabset}

## Non-overlap

```{ojs}
NOM_vals = ["IRD","NAP","PAND","PEM","PND","Tau","Tau-BC","Tau-U"]
tau_calc_vals = ["Tau (non-overlap)", "Kendall rank correlation"]
baseline_check_vals = ["Always adjust for baseline trend","Pretest for baseline trend, adjust if significant"]
```

```{ojs}
//| panel: input

viewof NOM = Inputs.select(
  NOM_vals, 
  {
    value: "NAP", 
    label: "Effect size index"
  }
)

viewof tau_calculation = (NOM == "Tau-BC")
  ? Inputs.radio(
      tau_calc_vals, 
      {
        value: tau_calc_vals[0], 
        label: "Choose a method for calculating Tau index"
      }
    )
  : Object.assign(html``, { value: null })

viewof baseline_check = (NOM == "Tau-BC")
  ? Inputs.radio(
      baseline_check_vals, 
      {
        value: baseline_check_vals[0], 
        label: "Test for baseline trend?"
      }
    )
  : Object.assign(html``, { value: null })

viewof significance_level = (NOM == "Tau-BC" && baseline_check == baseline_check_vals[1])
  ? Inputs.range(
      [0.005,0.995], 
      {
        step: 0.005, 
        value: 0.05, 
        label: "Significance level for the initial baseline trend test"
      }
    )
  : Object.assign(html``, { value: null })

viewof NOM_confidence = Inputs.range(
  [1,100], 
  {
    step: 1, 
    value: 95, 
    label: "Confidence level",
    disabled: NOM !== "NAP" && NOM !== "Tau" && NOM !== "Nau-BC" 
  }
)

viewof NOM_digits = Inputs.range(
  [1,16], 
  {
    step: 1, 
    value: 2, 
    label: "Digits"
  }
) 
```

## Parametric

```{ojs}
ES_parametric_vals = ["LOR", "LRRd", "LRRi", "LRM", "PoGO", "SMD"]
SMD_denom_vals = ["baseline SD","pooled SD"]
out_scale_vals = ["percentage","proportion","count","rate","other"]
```

```{ojs}
//| panel: input

viewof ES_parametric = Inputs.select(
  ES_parametric_vals, 
  {
    value: "LRRd", 
    label: "Effect size index"
  }
)

viewof SMD_denom = ES_parametric == "SMD"
  ? Inputs.radio(
    SMD_denom_vals, 
    {
      value: SMD_denom_vals[0], 
      label: "Standardized by"
    }
  )
  : Object.assign(html``, { value: null })

viewof out_scale = ES_parametric == "LOR" || ES_parametric == "LRRd" || ES_parametric == "LRRi" 
  ? Inputs.select(
    out_scale_vals,
    {
      value: out_scale_vals[0],
      label: "Outcome Scale"
    }
  )
  : Object.assign(html``, { value: null })

viewof intervals = ES_parametric == "LOR" || ES_parametric == "LRRd" || ES_parametric == "LRRi" 
  ? Inputs.number(
    [1,Infinity],
    {
      step: 1,
      label: "If observed via interval recording, total intervals per session",
      placeholder: ""
    }
  )
  : Object.assign(html``, { value: null })

viewof obslength = ES_parametric == "LOR" || ES_parametric == "LRRd" || ES_parametric == "LRRi" 
  ? Inputs.number(
    [0,Infinity],
    {
      step: 0.1,
      label: "Session length (in minutes)",
      placeholder: ""
    }
  )
  : Object.assign(html``, { value: null })

viewof lrrfloor = ES_parametric == "LOR" || ES_parametric == "LRRd" || ES_parametric == "LRRi" 
  ? Inputs.number(
    [0,Infinity],
    {
      step: 0.01,
      label: "User-specified floor constant",
      placeholder: ""
    }
  )
  : Object.assign(html``, { value: null })

viewof parametric_confidence = Inputs.range(
  [1,100], 
  {
    step: 1, 
    value: 95, 
    label: "Confidence level"
  }
)

viewof parametric_digits = Inputs.range(
  [1,16], 
  {
    step: 1, 
    value: 2, 
    label: "Digits"
  }
) 

```

:::


```{webr}
for (x in 1:5) {
  print(x ** 2)
}
```
